# -----------------------------------------------------------------------------
# ResearchAgent Graph Visualization Script
#
# Correction: The output path is changed to save the file inside the
# /app/workspace directory, which is mapped to the local ./workspace
# folder via docker-compose, making the output file visible on the host.
# -----------------------------------------------------------------------------

import re
from pathlib import Path

try:
    from backend.langgraph_agent import agent_graph
except ImportError as e:
    print("Error: Could not import 'agent_graph' from 'backend.langgraph_agent'.")
    print("Please ensure you are running this script from the project's root directory,")
    print("inside the Docker container (e.g., 'docker compose exec backend python -m backend.visualize_graph').")
    print(f"Original error: {e}")
    exit(1)

def visualize_graph():
    """
    Generates a MermaidJS text definition of the agent_graph.
    """
    print("Generating MermaidJS graph definition...")
    try:
        graph = agent_graph.get_graph()
        mermaid_definition = graph.draw_mermaid()
        
        mermaid_definition = re.sub(
            r'(\w+)\s-\.\s([^ ]+)\s\.->\s(\w+)(;?)',
            r'\1 -.->|\2| \3\4',
            mermaid_definition
        )
        
        # === THE FIX: Save the file inside the mapped workspace volume ===
        # The script is in /app/backend, so we navigate to /app/workspace
        output_dir = Path("/app/workspace")
        output_dir.mkdir(exist_ok=True) # Ensure the directory exists
        output_path = output_dir / "research_agent_graph_definition.md"
        
        file_content = (
            "# Research Agent Graph Definition\n\n"
            "This graph was automatically generated by `backend/visualize_graph.py`.\n\n"
            "To view the graph, copy the code block below and paste it into a Mermaid.js viewer like "
            "[mermaid.live](https://mermaid.live) or a supporting Markdown editor.\n\n"
            "```mermaid\n"
            f"{mermaid_definition}\n"
            "```\n"
        )
        
        with open(output_path, 'w', encoding='utf-8') as f:
            f.write(file_content)
        
        print(f"\nSuccessfully generated graph definition!")
        print(f"File saved to your project's './workspace' directory as 'research_agent_graph_definition.md'")

    except Exception as e:
        print(f"\nAn error occurred during graph definition generation: {e}")

if __name__ == "__main__":
    visualize_graph()
